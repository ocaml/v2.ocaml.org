# -*- mode: Makefile-gmake -*-

MPP_OPTIONS = -so '((!' -sc '!))' -son '{{!' -scn '!}}' -soc '' -scc '' -sec '' -sos '{{<' -scs '>}}' -its $(SET_STAGING)
MPP = mpp ${MPP_OPTIONS}
OMD_OPTIONS = -r ocaml=script/ocamltohtml -r tryocaml=script/ocamlapplet.bash
OMD = omd ${OMD_OPTIONS}
OMD_PP = script/md_preprocess

OCAML_VERSION = $(shell ocamlc -config | grep version | sed -e "s/version: *//")

OCAMLFLAGS = -annot
OCAMLOPT = ocamlfind ocamlopt $(OCAMLFLAGS)
OCAMLC = ocamlfind ocamlc $(OCAMLFLAGS)

# Things to create before launching the parallel page build
pre-build: template/main.mpp template/footer.mpp \
  template/front_code_snippet.html template/learn_code_snippet.html \
  script/breadcrumb script/translations \
  script/code_top script/ocamltohtml script/rss2html \
  script/lang_of_filename script/translate script/link_of_lang \
  opam_update_list $(OMD_PP)

UTILS_DEP = $(addprefix script/utils., cmi cmo cmx)
CODE_TYPE_DEP = $(addprefix script/code_types., cmi cmo cmx)

template/%_code_snippet.html:template/%_code_snippet.md $(OMD_PP)
	cat "$<" | $(OMD_PP) | ${OMD} -o $@

opam_update_list: script/generate_opam_update_list
	script/generate_opam_update_list

script/generate_opam_update_list: script/generate_opam_update_list.ml
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package opamfu,opam2web,cow.syntax \
	  -linkpkg -syntax camlp4o generate_opam_update_list.ml

script/lang_of_filename: script/lang_of_filename.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package str,netstring -linkpkg \
	  utils.cmx lang_of_filename.ml

script/translate: script/translate.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package str,netstring -linkpkg \
	  utils.cmx translate.ml

script/link_of_lang: script/link_of_lang.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package str,netstring -linkpkg \
	  utils.cmx link_of_lang.ml

script/breadcrumb: script/breadcrumb.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package str,netstring -linkpkg \
	  utils.cmx breadcrumb.ml

script/rss2html: script/rss2html.ml script/http.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -package netstring,equeue-ssl,netclient,rss \
	  -linkpkg utils.cmx http.ml rss2html.ml -o ../"$@"

script/ocamltohtml:script/lexer.ml script/ocamltohtml.ml
	cd script && \
	$(OCAMLOPT) -o ../$@ lexer.ml ocamltohtml.ml

script/md_preprocess: $(CODE_TYPE_DEP) script/code.ml \
  script/md_preprocess.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package omd,str,netstring -linkpkg \
	  utils.cmx code_types.cmx code.ml md_preprocess.ml

script/code_top: $(CODE_TYPE_DEP) script/code_top.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLC) -o ../"$@" -package netstring,dynlink,compiler-libs.toplevel \
	  -linkpkg utils.cmo code_types.cmo code_top.ml

RELATIVE_URLS_DEP=script/urlfun.ml script/urlfun.mli $(UTILS_DEP)
script/relative_urls: script/relative_urls.ml $(RELATIVE_URLS_DEP)
	cd script && \
	$(OCAMLOPT) -package uri,netstring -linkpkg \
	  utils.cmx urlfun.mli urlfun.ml relative_urls.ml -o ../"$@"

RELATIVE_URLS_DEP=script/urlfun.ml script/urlfun.mli $(UTILS_DEP)
script/absolute_urls: script/absolute_urls.ml $(RELATIVE_URLS_DEP)
	cd script && \
	$(OCAMLOPT) -package uri,netstring -linkpkg \
	  utils.cmx urlfun.mli urlfun.ml absolute_urls.ml -o ../"$@"

htmlescape:htmlescape.ml
	$(OCAMLOPT) $< -o $@

script/translations: script/translations.ml $(UTILS_DEP)
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package str,netstring -linkpkg \
	  utils.cmx translations.ml

script/%.cmx: script/%.ml script/%.cmi
	$(OCAMLOPT) -package netstring -c $< -o $@
script/%.cmi script/%.cmo: script/%.ml
	$(OCAMLC) -package netstring -c $< -o $@

TRASH += template/front_code_snippet.html opam_update_list \
  $(addprefix script/, generate_opam_update_list lang_of_filename translate \
  link_of_lang breadcrumb rss2html ocamltohtml md_preprocess \
  code_top relative_urls translations )

# Camlp4 tutorials
CAMLP4_TUT_DIR = learn/tutorials/camlp4_3.10
CAMLP4_TUT_SOURCES = \
  $(addprefix site/$(CAMLP4_TUT_DIR)/pa_foreach, .ml 2.ml 3.ml)
ocaml.org/$(CAMLP4_TUT_DIR)/foreach_tutorial.html: \
  $(CAMLP4_TUT_SOURCES:.ml=.cmo)

site/$(CAMLP4_TUT_DIR)/%.cmo: site/$(CAMLP4_TUT_DIR)/%.ml
	$(OCAMLC) -I +camlp4 camlp4lib.cma -pp camlp4orf -c $< -o $@

TRASH += $(CAMLP4_TUT_SOURCES:.ml=.cmi) $(CAMLP4_TUT_SOURCES:.ml=.cmo) \
  $(CAMLP4_TUT_SOURCES:.ml=.annot)

.PHONY: pre-build
